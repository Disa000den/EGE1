f = open('59714.txt')
cnt = 0
for s in f:
    a = sorted(int(x) for x in s.split()) (первые 4 строки это 100% шаблон. Меняется только название файла)
    povt = [x for x in a if a.count(x) == 2] (это доп условия по типу повторяющихся чисел и прочего говна.
    может попастся, что их будет несколько повторяющихся, может только одна пара и прочее говно. Тут надо думать)
    if len(povt) == 4 and len(set(a)) == 5: (само условие проверки списка. Тут может навыпадать такого говна, что
    мама не горюй, а может быть так легко, что закрытыми глазами можно напечатать код. в данном случае было две пары
    повторок, поэтому для правильного ответа нужно сделать проверку списка, что повторок по итогу именно 4 штуки, иначе
    будет неправильно работать вся эта схема)
        if (sum(a) - sum(povt)) / 3 > sum(povt) / 4: (второе условие можно разбивать, а можно сразу шпарить вместе с первым)
            cnt += 1 (счётчик ёпта)
print(cnt) (вывод нашего ответа)

ВАЖНОЕ:
При задаче с повторками желательно после проверки первого условия выводить список с повторами на экран, так как там
могут пустые списки и они будут также считаться в ответ, а это нам нахой не надо. Ручками их пролистать и посмотреть,
что всё собралось как надо.
Ну и надо думать чё да как.
Встречаются задачи на треугольники. Нужно знать только равенство и уметь писать его кодом. Само равенство выглядит так:
Самая длинная сторона треугольника меньше суммы двух других сторон.
Для питона это изи условие. В 4 строке формируется список значений и он будет отсортирован по возрастанию. То есть это
нам даёт такой мув, что последнее значение списка, то есть a[-1] это и будет самая длинная сторона. А дальше проверка по
if a[0] + a[1] > a[-1] or a[1] + a[2] > a[-1]. количество or и проверок по сторонам зависит от количества значений в строке
таблицы. То есть если в строке будет по 4 числа, то нам нужно проверить два условия только для пар: первое и второе,
второе и третье, так как четвертое будет нашим максимальным числом. Зависит всё от количества чисел в строке.
При пяти числах будет 3 проверки и т.д.